{"version":3,"sources":["components/Movie.jsx","components/MovieHeader.jsx","components/SearchBox.jsx","components/FullPreview.jsx","App.js","reportWebVitals.js","index.js"],"names":["Movie","props","className","movies","map","movie","index","src","Poster","alt","Title","MovieHeader","heading","SearchBox","class","type","value","onChange","event","setSearchVal","target","placeholder","FullPreview","id","Year","Type","imdbID","App","useState","setMovies","SearchVal","setHeading","getMovieRequest","a","url","fetch","response","json","responseJSON","Search","console","log","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAmBeA,G,MAjBD,SAACC,GAGX,OACI,mCACI,qBAAKC,UAAU,OAAf,SACID,EAAME,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACb,gCACI,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,UAC5B,6BAAKJ,EAAMK,oBCEpBC,EAXK,SAACV,GAEjB,OACI,mCACI,qBAAKC,UAAU,SAAf,SACI,6BAAKD,EAAMW,eCiBZC,G,MArBG,SAACZ,GACf,OACI,mCACA,sBAAKC,UAAU,YAAf,UACI,+BAAI,mBAAGY,MAAM,iBAAmB,qCAAhC,WACA,+BACA,sCACA,uCACA,yCAEA,uBACIC,KAAK,OAAOC,MAAOf,EAAMe,MACzBC,SAAU,SAACC,GAAD,OAAWjB,EAAMkB,aAAaD,EAAME,OAAOJ,QACrDK,YAAY,WAEhB,mBAAGP,MAAM,yBCQNQ,G,YAvBK,SAACrB,GACjB,OACI,mCACG,qBAAKC,UAAU,UAAf,SACED,EAAME,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACd,sBAAKiB,GAAG,cAAR,UACI,8BACI,qBAAKhB,IAAKF,EAAMG,OAAQC,IAAI,YAEhC,sBAAKc,GAAG,UAAR,UACA,yCACI,8BAAG,4CAAsBlB,EAAMK,SAC/B,8BAAG,2CAAqBL,EAAMmB,QAC9B,8BAAG,2CAAqBnB,EAAMoB,QAC9B,8BAAG,6CAAuBpB,EAAMqB,yB,MCwBzCC,MAhCf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACNzB,EADM,KACC0B,EADD,OAEqBD,mBAAS,IAF9B,mBAENE,EAFM,KAEKX,EAFL,OAGiBS,mBAAS,IAH1B,mBAGNhB,EAHM,KAGGmB,EAHH,KAKPC,EAAe,uCAAG,WAAMF,GAAN,mBAAAG,EAAA,6DAChBC,EADgB,oCACmBJ,EADnB,6BAGCK,MAAMD,GAHP,cAGhBE,EAHgB,gBAIKA,EAASC,OAJd,QAIhBC,EAJgB,QAKNC,SAChBV,EAAUS,EAAaC,QACvBR,EAAWO,EAAaC,SAExBC,QAAQC,IAAIH,EAAaC,QATH,2CAAH,sDAerB,OAJAG,qBAAW,WACTV,EAAgBF,KACf,CAACA,IAGF,qCACE,sBAAK5B,UAAU,YAAf,UACE,cAAC,EAAD,CAAW4B,UAAWA,EAAWX,aAAcA,IAC/C,cAAC,EAAD,IACA,cAAC,EAAD,CAAOhB,OAAQA,EAAQS,QAASA,OAElC,cAAC,EAAD,CAAaT,OAAQA,QCxBZwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,mCACA,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UAIJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c4997ed.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './Movies.css'\r\nconst Movie = (props) => {\r\n    const API_KEY = 'http://www.omdbapi.com/?i=tt3896198&apikey=584dd146';\r\n\r\n    return(\r\n        <>\r\n            <div className=\"main\">\r\n               {props.movies.map((movie, index) => (\r\n                    <div>\r\n                        <img src={movie.Poster} alt='Image'/>\r\n                        <h4>{movie.Title}</h4>\r\n                    </div>\r\n               ))} \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\r\n\r\nconst MovieHeader = (props) => {\r\n\r\n    return(\r\n        <>\r\n            <div className=\"header\">\r\n                <h1>{props.heading}</h1>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieHeader;\r\n\r\n","import React from 'react'\r\nimport './SearchBox.css'\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <>\r\n        <div className='searchBox'>\r\n            <h1><i class=\"fas fa-video\"></i><span>M</span>ovies</h1>\r\n            <ul>\r\n            <li>Home</li>\r\n            <li>About</li>\r\n            <li>Help</li>\r\n            </ul>\r\n            <input \r\n                type=\"text\" value={props.value} \r\n                onChange={(event) => props.setSearchVal(event.target.value)}\r\n                placeholder='Search'\r\n            />\r\n            <i class=\"fas fa-search\"></i>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\nimport './FullPreview.css';\r\n\r\nconst FullPreview = (props) => {\r\n    return(\r\n        <>\r\n           <div className=\"Preview\">\r\n            {props.movies.map((movie, index) => (\r\n                <div id='FullPreview'>\r\n                    <div>\r\n                        <img src={movie.Poster} alt='Image'/>\r\n                    </div>\r\n                    <div id='content'>\r\n                    <h3>Details</h3>\r\n                        <p><span>Title : </span>{movie.Title}</p>\r\n                        <p><span>Year : </span>{movie.Year}</p>\r\n                        <p><span>Type : </span>{movie.Type}</p>\r\n                        <p><span>imdbID : </span>{movie.imdbID}</p>\r\n                    </div>\r\n                </div>\r\n            ))} \r\n           </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FullPreview;","import React, { useEffect, useState } from \"react\";\nimport Movie from \"./components/Movie\";\nimport MovieHeader from \"./components/MovieHeader\";\nimport SearchBox from \"./components/SearchBox\";\nimport Footer from './components/Footer'\nimport FullPreview from \"./components/FullPreview\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  const [movies,setMovies] = useState([]); \n  const [SearchVal, setSearchVal] = useState('');\n  const [heading, setHeading] = useState([]);\n\n  const getMovieRequest = async(SearchVal) => {\n    const url = `http://www.omdbapi.com/?s=${SearchVal}&apikey=584dd146`;\n\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    if(responseJSON.Search) {\n    setMovies(responseJSON.Search);\n    setHeading(responseJSON.Search)\n    }\n    console.log(responseJSON.Search);\n  }\n  useEffect( () => {\n    getMovieRequest(SearchVal);\n  }, [SearchVal]);\n\n  return (\n    <>\n      <div className='container'>\n        <SearchBox SearchVal={SearchVal} setSearchVal={setSearchVal}/>\n        <MovieHeader/>\n        <Movie movies={movies} heading={heading}/>\n      </div>\n      <FullPreview movies={movies}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nReactDOM.render(\n  <>\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}